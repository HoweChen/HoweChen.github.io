<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://howechen.github.io/</id>
    <title>Think Different</title>
    <updated>2019-10-21T11:59:28.975Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://howechen.github.io/"/>
    <link rel="self" href="https://howechen.github.io//atom.xml"/>
    <subtitle>Yuhao Chen (Howe) – 陈雨豪</subtitle>
    <logo>https://howechen.github.io//images/avatar.png</logo>
    <icon>https://howechen.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Think Different</rights>
    <entry>
        <title type="html"><![CDATA[Setting up MySQL docker container with local connection]]></title>
        <id>https://howechen.github.io//post/setting-up-mysql-docker-container-with-local-connection</id>
        <link href="https://howechen.github.io//post/setting-up-mysql-docker-container-with-local-connection">
        </link>
        <updated>2019-10-19T12:27:15.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="scenario">Scenario</h1>
<p>Things happen when I need to have multiple mysql versions on my macbook, and I foudn taht the homebrew's version is not good enough. I cannot start a mysql process. So I want docker to fix the issue.</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="scenario">Scenario</h1>
<p>Things happen when I need to have multiple mysql versions on my macbook, and I foudn taht the homebrew's version is not good enough. I cannot start a mysql process. So I want docker to fix the issue.</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://howechen.github.io//post-images/1571488230838.png" alt=""></figure>
<h1 id="solution">Solution</h1>
<h2 id="pull-the-latest-mysql-image">Pull the latest mysql image</h2>
<pre><code class="language-shell">
docker pull mysql/mysql-server:latest

</code></pre>
<h2 id="run-docker-container-based-on-docker-image">Run docker container based on docker image</h2>
<pre><code>
docker run --name mysql -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -v /docker/mysql_data:/var/lib/mysql mysql/mysql:5.6

</code></pre>
<h3 id="parameter-explanation">Parameter explanation</h3>
<p>--name mysql: your container name, I set this to mysql56</p>
<p>-d: run the container at the background and return the contianer ID</p>
<p>-p 3306:3306: former port stands for local port, and latter port is the container port. By default the mysql port on docker container is 3306</p>
<p>-e MYSQL_ROOT_PASSWORD=123456: you can set your own root password</p>
<p>-v /docker/mysql_data:/var/lib/mysql: map the folder in container to the local path, please make sure that on Mac you have permitted the folder in GUI. This is for data persistance usage.</p>
<figure data-type="image" tabindex="2"><img src="https://howechen.github.io//post-images/1571488273990.png" alt=""></figure>
<p>mysql/mysql:5.6: this defines that I want to use mysql 5.6 version. You can check the tag name you want on the docker hub website.</p>
<p>[optional]--restart always: always restart the ocntainer when the container exit.</p>
<h2 id="check-the-current-running-cotainer">Check the current running cotainer</h2>
<pre><code class="language-shell">
docker ps

</code></pre>
<h2 id="get-into-the-container-with-bash">Get into the container with bash</h2>
<pre><code class="language-shell">

docker exec -it mysql56 bash

mysql -uroot -p

</code></pre>
<h2 id="grant-permission-for-external-login">Grant permission for external login</h2>
<p>You still cannot login to the mysql container externally because for now the mysql only permit user from localhost, e.g. root@localhsot, you need to type:</p>
<pre><code class="language-sql">
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'your_password' WITH GRANT OPTION;

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS Mojave Pyenv install multi-version build failed solution]]></title>
        <id>https://howechen.github.io//post/macos-mojave-pyenv-install-multi-version-build-failed-solution</id>
        <link href="https://howechen.github.io//post/macos-mojave-pyenv-install-multi-version-build-failed-solution">
        </link>
        <updated>2018-12-09T01:19:43.000Z</updated>
        <content type="html"><![CDATA[<h2 id="build-failed">Build Failed</h2>
<p>On macOS Mojave, if you want to install multi-version of python. You might get build failed error.</p>
<p>The error would be like:</p>
<pre><code class="language-shell">BUILD FAILED (OS X 10.14.1 using python-build 20180424)

Inspect or clean up the working tree at /var/folders/wm/hm_v7w195c7ftkk6rjlk9qlc0000gn/T/python-build.20181208174645.70936
Results logged to /var/folders/wm/hm_v7w195c7ftkk6rjlk9qlc0000gn/T/python-build.20181208174645.70936.log

Last 10 log lines:
File &quot;/private/var/folders/wm/hm_v7w195c7ftkk6rjlk9qlc0000gn/T/python-build.20181208174645.70936/Python-3.6.7/Lib/ensurepip/__main__.py&quot;, line 5, in &lt;module&gt;
sys.exit(ensurepip._main())
File &quot;/private/var/folders/wm/hm_v7w195c7ftkk6rjlk9qlc0000gn/T/python-build.20181208174645.70936/Python-3.6.7/Lib/ensurepip/__init__.py&quot;, line 204, in _main
default_pip=args.default_pip,
File &quot;/private/var/folders/wm/hm_v7w195c7ftkk6rjlk9qlc0000gn/T/python-build.20181208174645.70936/Python-3.6.7/Lib/ensurepip/__init__.py&quot;, line 117, in _bootstrap
return _run_pip(args + [p[0] for p in _PROJECTS], additional_paths)
File &quot;/private/var/folders/wm/hm_v7w195c7ftkk6rjlk9qlc0000gn/T/python-build.20181208174645.70936/Python-3.6.7/Lib/ensurepip/__init__.py&quot;, line 27, in _run_pip
import pip._internal
zipimport.ZipImportError: can't decompress data; zlib not available
make: *** [install] Error 1
</code></pre>
<p>On some webpage from StackOverflow, the solution will be used</p>
<pre><code class="language-shell">xcode-select --install
</code></pre>
<p>But this cannot fix the issue on Mojave.</p>
<h2 id="solution">Solution</h2>
<p>I saw this on GitHub, just post a blog to note this command.</p>
<p>On Mojave, just type:</p>
<pre><code class="language-shell">sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
</code></pre>
<p>and then install another environment, like</p>
<pre><code class="language-shell">pyenv install 3.6.7
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Update of Apache Spark and Python 3.6 compatibility]]></title>
        <id>https://howechen.github.io//post/update-of-apache-spark-and-python-36-compatibility</id>
        <link href="https://howechen.github.io//post/update-of-apache-spark-and-python-36-compatibility">
        </link>
        <updated>2017-07-28T11:38:32.000Z</updated>
        <summary type="html"><![CDATA[<p>Now the Apache-Spark has released two stable version, 2.1.1 and 2.2.0. The compatibility problem has been solved, you don’t need to try pyenv anymore. Just install apache-spark from home-brew then you may use it.</p>
<p>But if you are going to use python3.6 and your default python in terminal is python2.7, you would find that the REPL would still be the python2.7 version.</p>
]]></summary>
        <content type="html"><![CDATA[<p>Now the Apache-Spark has released two stable version, 2.1.1 and 2.2.0. The compatibility problem has been solved, you don’t need to try pyenv anymore. Just install apache-spark from home-brew then you may use it.</p>
<p>But if you are going to use python3.6 and your default python in terminal is python2.7, you would find that the REPL would still be the python2.7 version.</p>
<!-- more -->
<p>In order to fix that, you should input</p>
<pre><code>sudo PYSPARK_PYTHON=ptipython3 pyspark
</code></pre>
<p>As you can see, I am using ptipython3 as my Python 3 REPL. You can use the default interpreter by changing it to python3 and that will be good for you to use.</p>
<p>Ptpython is a better python interpreter, here is the link:</p>
<p>[github.com/jonathanslenders/ptpython</p>
]]></content>
    </entry>
</feed>